{"version":3,"sources":["components/Sidebar.js","components/ReduxSns.js","App.js","features/counter/counterSlice.js","app/store.js","index.js"],"names":["Sidebar","className","placeholder","ReduxSns","App","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"kOAkBeA,G,MAfC,WACZ,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,IAAD,CAAYA,UAAU,uBACtB,uBAAOC,YAAY,eAAKD,UAAU,uBAG1C,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,wBCFZE,EARE,WACb,OACI,qBAAKF,UAAU,WAAf,SACI,cAAC,EAAD,OCKGG,MARf,WACE,OACE,qBAAKH,UAAU,MAAf,SACC,cAAC,EAAD,O,OCJQI,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,GAETC,SAAU,CACRC,UAAW,SAAAC,GAKTA,EAAMH,OAAS,GAEjBI,UAAW,SAAAD,GACTA,EAAMH,OAAS,GAEjBK,kBAAmB,SAACF,EAAOG,GACzBH,EAAMH,OAASM,EAAOC,Y,EAK+BX,EAAaY,QAiBzDZ,G,EAjBAM,U,EAAWE,U,EAAWC,kBAiBtBT,EAAf,SCtCea,cAAe,CAC5BC,QAAS,CACPC,QAASC,K,QCEbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.f5cd475d.chunk.js","sourcesContent":["import React from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport './Sidebar.css'\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <div className=\"sidebar_search\">\r\n                    <SearchIcon className=\"sidebar_searchIcon\"/>\r\n                    <input placeholder=\"검색\" className=\"sidebar_input\"></input>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_threads\"></div>\r\n            <div className=\"sidebar_bottom\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Sidebar from './Sidebar'\r\n\r\nconst ReduxSns = () => {\r\n    return (\r\n        <div className=\"reduxsns\">\r\n            <Sidebar/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReduxSns\r\n","import React from 'react';\r\nimport ReduxSns from './components/ReduxSns';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <ReduxSns/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}